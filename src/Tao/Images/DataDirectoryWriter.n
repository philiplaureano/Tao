using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Tao.Interfaces;

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

using Tao.Interfaces;
namespace Tao
{
    public class DataDirectoryWriter : IDataDirectoryWriter, IImageWriter
    {
        public Write([NotNull] directories : IEnumerable[IDataDirectory], [NotNull] stream : Stream) : uint
        requires directories.Count() > 0 otherwise throw ArgumentException("There are no data directories to be written")
        {          
            def writer = BinaryWriter(stream);
            foreach(directory in directories)
            {
                writer.Write(directory.Rva);
                writer.Write(directory.Size);
            }         
            
            stream.Position :> uint;
        }
        public Write([NotNull] image : IImage, [NotNull] outputStream : Stream) : uint
            requires image.DataDirectories != null
        {
            Write(image.DataDirectories, outputStream);
        }
    }
}

using Nemerle;
using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;

using Tao.Interfaces;

namespace Tao
{
    public class SlackWriter : IWriter
    {
        private _getNextRva : void -> uint;
        private _getPreviousRva : void -> uint;
        private _getPreviousLength : void -> uint;
        
        public this([NotNull] getNextRva : void -> uint, [NotNull] getPreviousRva : void -> uint, [NotNull] getPreviousLength : void -> uint)
        {
            _getNextRva = getNextRva;
            _getPreviousRva = getPreviousRva;
            _getPreviousLength = getPreviousLength;
        }
        
        public Write([NotNull] stream : Stream) : uint
        {
            def writer = BinaryWriter(stream);
            
            def nextRva = _getNextRva() :> int;
            def previousRva = _getPreviousRva() :> int;
            def previousLength = _getPreviousLength() :> int;
            
            def lastPosition = previousRva + previousLength;
            def numberOfPaddingBytes = nextRva - lastPosition;
            for(mutable i = numberOfPaddingBytes; i > 0; i--)
            {
                writer.Write(0 : byte);
            }
            
            stream.Position :> uint;
        }
    }
}
